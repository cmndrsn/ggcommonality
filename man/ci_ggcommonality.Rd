% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggcommonality.R
\name{ci_ggcommonality}
\alias{ci_ggcommonality}
\title{Percentile-based Bootstrap Confidence Intervals for ggcommonality.}
\usage{
ci_ggcommonality(
  formula,
  data,
  sample_column,
  n_replications,
  ci_sign = "+",
  ci_lower = 0.025,
  ci_upper = 0.975,
  by = "partition",
  ...
)
}
\arguments{
\item{formula}{Formula for linear regression model}

\item{data}{Data frame matching formula argument}

\item{sample_column}{Character. Name of column for resampling participants.}

\item{n_replications}{Numeric. Number of replications to use in bootstrap.}

\item{ci_sign}{If "+", genereates confidence intervals using only positive coefficients
If "-", generates confidence intervals using only negative coefficients.
Otherwise, generates confidence interval using both positive and negative.}

\item{ci_lower}{Numeric. Value for lower bound of confidence interval.}

\item{ci_upper}{Numeric. Value for upper bound of confidence interval}

\item{by}{In progress. Currently allows stacking unique and common effects by partition
if "partition" is the input. Otherwise it stacks unique vs joint effects.}

\item{...}{Additional parameters passed to ggplot2::geom_errorbar}
}
\value{
ggproto instance
}
\description{
Uses structured bootstrapping to create a 95% confidence interval.
}
\details{
Calls yhat::regr() to generate commonality coefficients for
data resampled with replacement. Then it sums unique and joint effects for each
commonality partition and generates a 95% confidence interval.
By setting ci_sign to "positive" or "negative", you can generate an errorbar
for positive and negative commonalities, respectively.
}
\examples{
 ggcommonality(formula = mpg ~ cyl + disp + vs,
               data = mtcars) +
   ci_ggcommonality(formula = mpg ~ cyl + disp + vs,
                    data = mtcars,
                    sample_column = "gear",
                    n_replications = 100,
                    ci_sign = "+") |> suppressWarnings()
}
